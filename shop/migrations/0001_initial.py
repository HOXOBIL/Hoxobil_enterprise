# Generated by Django 5.2.1 on 2025-05-14 04:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('printify_id', models.CharField(db_index=True, help_text='Unique Product ID from Printify.', max_length=100, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('base_price_ngn', models.DecimalField(decimal_places=2, default=0.0, help_text='Base display price in NGN.', max_digits=10)),
                ('primary_image_url', models.URLField(blank=True, help_text='URL of the primary display image.', max_length=1024, null=True)),
                ('product_options_data', models.JSONField(blank=True, default=list, help_text='Structured product options (e.g., Color, Size) from Printify.')),
                ('variants_data', models.JSONField(blank=True, default=list, help_text='Detailed list of all product variants with their properties.')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags associated with the product from Printify.')),
                ('printify_shop_id', models.CharField(blank=True, db_index=True, help_text='Printify Shop ID this product belongs to.', max_length=100, null=True)),
                ('printify_blueprint_id', models.IntegerField(blank=True, help_text='Printify Blueprint ID.', null=True)),
                ('printify_print_provider_id', models.IntegerField(blank=True, help_text='Printify Print Provider ID.', null=True)),
                ('is_published', models.BooleanField(default=True, help_text='Is the product published on Printify?')),
                ('last_synced_at', models.DateTimeField(blank=True, help_text='Timestamp of the last sync from Printify.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Synced Product',
                'verbose_name_plural': 'Synced Products',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='SiteEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(choices=[('SITE_LAUNCH', 'Site Launch Date/Time')], help_text='The unique name of the event.', max_length=50, unique=True)),
                ('event_datetime', models.DateTimeField(help_text='The date and time of the event.')),
                ('is_active', models.BooleanField(default=True, help_text='Is this event currently active/relevant?')),
                ('notes', models.TextField(blank=True, help_text='Optional notes about this event.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Event',
                'verbose_name_plural': 'Site Events',
                'ordering': ['-event_datetime'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='Your primary email address, used for login.', max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zipcode', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='Nigeria', max_length=100)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid', models.BooleanField(default=False)),
                ('paystack_reference', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, help_text='User who placed the order, if authenticated.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_title', models.CharField(max_length=200)),
                ('variant_title', models.CharField(blank=True, max_length=200, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price_at_purchase', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shop.order')),
            ],
        ),
        migrations.CreateModel(
            name='WinningCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='The 6-digit winning code.', max_length=6, unique=True)),
                ('prize_description', models.CharField(help_text='Description of the prize for this code.', max_length=255)),
                ('is_claimed', models.BooleanField(default=False, help_text='Has this prize been claimed?')),
                ('claimed_at', models.DateTimeField(blank=True, help_text='When this prize was claimed.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('claimed_by_user', models.ForeignKey(blank=True, help_text='The user who claimed this prize.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Winning Code',
                'verbose_name_plural': 'Winning Codes',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_code', models.CharField(blank=True, help_text="User's unique referral code.", max_length=12, null=True, unique=True)),
                ('referral_count', models.PositiveIntegerField(default=0, help_text='Number of successful referrals made by this user.')),
                ('unlocked_first_digit', models.CharField(blank=True, help_text='The first digit of a winning code unlocked via referrals.', max_length=1, null=True)),
                ('digit_unlocked_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referred_by', models.ForeignKey(blank=True, help_text='The user who referred this profile.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals_made', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('unlocked_digit_from_code', models.ForeignKey(blank=True, help_text='The winning code from which the digit was revealed.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='digit_revealed_for', to='shop.winningcode')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='CompetitionAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, db_index=True, help_text="User's session key if attempt was anonymous.", max_length=40, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, db_index=True, null=True)),
                ('submitted_code', models.CharField(help_text='The code submitted by the user.', max_length=6)),
                ('is_winner', models.BooleanField(default=False, help_text='Was this attempt a winning one?')),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, help_text='The user who made the attempt, if authenticated.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('winning_code_matched', models.ForeignKey(blank=True, help_text='Which winning code was matched, if any.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.winningcode')),
            ],
            options={
                'verbose_name': 'Competition Attempt',
                'verbose_name_plural': 'Competition Attempts',
                'ordering': ['-attempted_at'],
            },
        ),
    ]
